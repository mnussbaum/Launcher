// This file was generated by gir (https://github.com/gtk-rs/gir)
// from gir-files (https://github.com/gtk-rs/gir-files)
// DO NOT EDIT

use glib::object::IsA;
use glib::translate::*;
use gtk_sys;
use std::fmt;

glib_wrapper! {
    pub struct StyleProvider(Interface<gtk_sys::GtkStyleProvider>);

    match fn {
        get_type => || gtk_sys::gtk_style_provider_get_type(),
    }
}

pub const NONE_STYLE_PROVIDER: Option<&StyleProvider> = None;

pub trait StyleProviderExt: 'static {
    //fn get_style_property(&self, path: &WidgetPath, state: StateFlags, pspec: /*Ignored*/&glib::ParamSpec) -> Option<glib::Value>;
}

impl<O: IsA<StyleProvider>> StyleProviderExt for O {
    //fn get_style_property(&self, path: &WidgetPath, state: StateFlags, pspec: /*Ignored*/&glib::ParamSpec) -> Option<glib::Value> {
    //    unsafe { TODO: call gtk_sys:gtk_style_provider_get_style_property() }
    //}
}

impl fmt::Display for StyleProvider {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        write!(f, "StyleProvider")
    }
}
